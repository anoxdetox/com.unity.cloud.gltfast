{"name":"com.unity.cloud.gltfast","version":"6.9.1","displayName":"Unity glTFast","description":"Use glTFast to import and export glTF 3D files efficiently at runtime or in the Editor","unity":"2020.3","keywords":["mesh","gltf","asset","format","draco","ktx","basis","universal","basisu"],"dependencies":{"com.unity.modules.jsonserialize":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0","com.unity.mathematics":"1.3.1","com.unity.burst":"1.8.4","com.unity.collections":"1.5.1"},"relatedPackages":{"com.unity.cloud.gltfast.tests":"0.0.0"},"unityRelease":"48f1","repository":{"revision":"d87c8228bf7650a1256ae241c4a6a637a2ced5a9","type":"git","url":"https://github.cds.internal.unity3d.com/unity/com.unity.cloud.gltfast.src.git"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.cloud.gltfast@6.9/manual/index.html","_upm":{"changelog":"### Added\n- (Test) `OpenGltfScene` with open glTF file dialog for convenient testing.\n- (Test) Tests for C# jobs that calculate or re-order indices.\n- Third party notices.\n\n### Changed\n- Node name is assigned earlier during instantiation, enabling easier node identification by name (partially fixes [#724](https://github.com/atteneder/glTFast/issues/724)).\n- (Test) Updated test project dependencies.\n- (CI) Migrated code coverage.\n- Code refactoring\n  - Flattened `GltfImportBase.Prepare` by extracting many large code blocks into dedicated methods.\n  - Improved class/field naming. It's now less deceptive and more uniform.\n  - Using `NativeArray` directly/only instead of `AccessorData` classes/managed arrays. With this change `NativeArrays` are used for index buffers as well which reduces the amount of managed memory allocated.\n- Facilitated use of safer NativeCollections in C# jobs that calculate or re-order indices instead of `unsafe` / pointers.\n\n### Fixed\n- Made sure that mesh primitives of different drawmode (topology) are not mixed up."}}